/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package RestaurantManagementSystem;

import java.util.ArrayList;
import java.util.Locale;
import java.util.ResourceBundle;

/**
 *
 * @author jannalomibao
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    ManagementSystem managementSystem;
    ResourceBundle bundle;
    ResourceBundle bundleFR;

    public MainForm(ManagementSystem managementSystem) {
        initComponents();
        this.managementSystem = new ManagementSystem();
        bundle =  ResourceBundle.getBundle("FormLanguage");
        bundleFR =  ResourceBundle.getBundle("FormLanguage", Locale.FRANCE);
        englishRadioButton.setSelected(true);
      
    }

    private MainForm() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        restaurantNameLabel = new javax.swing.JLabel();
        forPhoneNumberLabel = new javax.swing.JLabel();
        phoneNumberTextBox = new javax.swing.JTextField();
        forAppetizerLabel = new javax.swing.JLabel();
        frenchFriesCheckBox = new javax.swing.JCheckBox();
        onionRingsCheckBox = new javax.swing.JCheckBox();
        calamariCheckBox = new javax.swing.JCheckBox();
        forSaladLabel = new javax.swing.JLabel();
        chickenSaladCheckBox = new javax.swing.JCheckBox();
        todaySaladCheckBox = new javax.swing.JCheckBox();
        forMainDishesLabel = new javax.swing.JLabel();
        chickenPadThaiCheckBox = new javax.swing.JCheckBox();
        chickenAndPotatoCreamCheckBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        cokeCheckBox = new javax.swing.JCheckBox();
        coffeeCheckBox = new javax.swing.JCheckBox();
        orderButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayOrdersTextArea = new javax.swing.JTextArea();
        frenchRadioButton = new javax.swing.JRadioButton();
        englishRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        spicyMayoCheckBox = new javax.swing.JCheckBox();
        bbqCheckBox = new javax.swing.JCheckBox();
        clearButton = new javax.swing.JButton();
        forTotalLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        restaurantNameLabel.setText("Janna's Restaurant");

        forPhoneNumberLabel.setText("Phone Number:");

        forAppetizerLabel.setText("Appetizer:");

        frenchFriesCheckBox.setText("French Fries");

        onionRingsCheckBox.setText("Onion Rings");

        calamariCheckBox.setText("Calamari");

        forSaladLabel.setText("Salad:");

        chickenSaladCheckBox.setText("Chicken Salad");

        todaySaladCheckBox.setText("Today's Salad");

        forMainDishesLabel.setText("Main Dishes:");

        chickenPadThaiCheckBox.setText("Chicken Pad Thai");
        chickenPadThaiCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chickenPadThaiCheckBoxActionPerformed(evt);
            }
        });

        chickenAndPotatoCreamCheckBox.setText("Chicken and Potato with Dijon Cream Sauce");

        jLabel1.setText("Drinks:");

        cokeCheckBox.setText("Coke");

        coffeeCheckBox.setText("Coffee");

        orderButton.setText("Order Now");
        orderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderButtonActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(153, 153, 255));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        displayOrdersTextArea.setColumns(20);
        displayOrdersTextArea.setRows(5);
        jScrollPane1.setViewportView(displayOrdersTextArea);

        frenchRadioButton.setText("French");
        frenchRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frenchRadioButtonActionPerformed(evt);
            }
        });

        englishRadioButton.setText("English");
        englishRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                englishRadioButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Status");

        statusLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        spicyMayoCheckBox.setText("Spicy Mayo");
        spicyMayoCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spicyMayoCheckBoxActionPerformed(evt);
            }
        });

        bbqCheckBox.setText("BBQ");

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        forTotalLabel.setText("Total");

        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        totalLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(orderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(116, 116, 116)
                                .addComponent(englishRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(frenchRadioButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(forAppetizerLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(forPhoneNumberLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(phoneNumberTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(restaurantNameLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(calamariCheckBox)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(frenchFriesCheckBox)
                                            .addComponent(onionRingsCheckBox))
                                        .addGap(119, 119, 119)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(forSaladLabel)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(17, 17, 17)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(todaySaladCheckBox)
                                                    .addComponent(chickenSaladCheckBox)))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(forMainDishesLabel)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(376, 376, 376)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chickenAndPotatoCreamCheckBox)
                                            .addComponent(coffeeCheckBox)
                                            .addComponent(cokeCheckBox)
                                            .addComponent(chickenPadThaiCheckBox)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(33, 33, 33)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(spicyMayoCheckBox)
                                                    .addComponent(bbqCheckBox)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(forTotalLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(clearButton)
                        .addGap(127, 127, 127))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(clearButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(restaurantNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(forPhoneNumberLabel)
                    .addComponent(phoneNumberTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(forAppetizerLabel)
                    .addComponent(forSaladLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frenchFriesCheckBox)
                    .addComponent(chickenSaladCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(onionRingsCheckBox)
                    .addComponent(todaySaladCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calamariCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spicyMayoCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bbqCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(forMainDishesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chickenPadThaiCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chickenAndPotatoCreamCheckBox)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cokeCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(coffeeCheckBox)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(englishRadioButton)
                                    .addComponent(frenchRadioButton))))
                        .addGap(82, 82, 82)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(orderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(forTotalLabel))
                        .addGap(15, 15, 15)))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void englishRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_englishRadioButtonActionPerformed
        // TODO add your handling code here:
        bbqCheckBox.setText(bundle.getString("BBQCheckBox"));
        calamariCheckBox.setText(bundle.getString("CalamariCheckBox"));
        chickenAndPotatoCreamCheckBox.setText(bundle.getString("ChickenAndPotatoCream"));
        chickenPadThaiCheckBox.setText(bundle.getString("PadThai"));
        chickenSaladCheckBox.setText(bundle.getString("ChickenSalad"));
        coffeeCheckBox.setText(bundle.getString("CoffeeCheckBox"));
        cokeCheckBox.setText(bundle.getString("CokeCheckBox"));
        frenchFriesCheckBox.setText(bundle.getString("FrenchFriesCheckBox"));
        onionRingsCheckBox.setText(bundle.getString("OnionRingCheckBox"));
        spicyMayoCheckBox.setText(bundle.getString("SpicyMayoCheckBox"));
        todaySaladCheckBox.setText(bundle.getString("TodaySalad"));
        clearButton.setText(bundle.getString("ClearButton"));
        forAppetizerLabel.setText(bundle.getString("ForAppetizerLabel"));
        forMainDishesLabel.setText(bundle.getString("ForMainDishesLabel"));
        forPhoneNumberLabel.setText(bundle.getString("ForPhoneNumberLabel"));
        forSaladLabel.setText(bundle.getString("ForSaladLabel"));
        forTotalLabel.setText(bundle.getString("ForTotalLabel"));
        orderButton.setText(bundle.getString("orderButton"));
        restaurantNameLabel.setText(bundle.getString("RestaurantNameLabel"));
        statusLabel.setText(bundle.getString("StatusLabel"));
        
        //
        englishRadioButton.setSelected(true);
        frenchRadioButton.setSelected(false);
    }//GEN-LAST:event_englishRadioButtonActionPerformed

    private void orderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderButtonActionPerformed
        // TODO add your handling code here:
        ResourceBundle bund;
        if(englishRadioButton.isSelected()){
            bund = bundle;
        }else{
            bund = bundleFR;
        }
        
        String number = phoneNumberTextBox.getText();
        if(!number.isEmpty() && managementSystem.isValidPhoneNumber(Long.parseLong(number))){
            displayOrdersTextArea.append("");
            double total = 0;
            long phoneNumber = Long.parseLong(phoneNumberTextBox.getText());
        
            //appetizer

            ArrayList<Appetizer> selectedAppetizer = new ArrayList<>();
            if(frenchFriesCheckBox.isSelected()){
               selectedAppetizer.add(new FrenchFries());
            }
            if(onionRingsCheckBox.isSelected()){
               selectedAppetizer.add(new OnionRing());
            }
            if(calamariCheckBox.isSelected()){
               selectedAppetizer.add(new Calamari());
            }

            //decorator
             if (spicyMayoCheckBox.isSelected()) {
                selectedAppetizer = decorateWithSpicyMayo(selectedAppetizer);
            }
            if (bbqCheckBox.isSelected()) {
                selectedAppetizer = decorateWithBBQ(selectedAppetizer);
            }

            // Add the selected appetizers to the order
            for (Appetizer appetizer : selectedAppetizer) {
                managementSystem.addOrder(phoneNumber, appetizer);
                total += appetizer.getCost();
            }

            //salad
            if(chickenSaladCheckBox.isSelected()){
                ChickedSalad cs = new ChickedSalad();
                managementSystem.addOrder(phoneNumber,cs); 
                total += cs.getCost();
            }
            if(todaySaladCheckBox.isSelected()){
                TodaySalad ts = new TodaySalad();
                managementSystem.addOrder(phoneNumber, ts);  
                total += ts.getCost();
            }
            //main dish
            if(chickenPadThaiCheckBox.isSelected()){
                PadThai pt =  new PadThai(); 
                managementSystem.addOrder(phoneNumber,pt);   
                total += pt.getCost();
            }
            if(chickenAndPotatoCreamCheckBox.isSelected()){
                ChickenPotatoSauce cps = new ChickenPotatoSauce();
                managementSystem.addOrder(phoneNumber, cps);     
                total += cps.getCost();
            }

            //drinks
            if(cokeCheckBox.isSelected()){
                Coke coke = new Coke();
                managementSystem.addOrder(phoneNumber, coke);     
                total += coke.getCost();
            }
            if(coffeeCheckBox.isSelected()){
                Coffee coffee = new Coffee();
                managementSystem.addOrder(phoneNumber, coffee);   
                total += coffee.getCost();
            }
            //status
            
            
            statusLabel.setText(bund.getString("Success"));
            totalLabel.setText(Double.toString(total));
            displayOrdersTextArea.append(Long.toString(phoneNumber)+ "\n");
            ArrayList<Product> orders = managementSystem.getOrders(phoneNumber);
            for(Product p : orders){
                displayOrdersTextArea.append(p.getDescription()+ "\n");
            }
            displayOrdersTextArea.append("TOTAL: $ " +total + "\n");
            displayOrdersTextArea.append("--------------------\n");

        }else{
            statusLabel.setText(bund.getString("Error"));
        }
        clearAll();
        
        
    }//GEN-LAST:event_orderButtonActionPerformed
    private ArrayList<Appetizer> decorateWithSpicyMayo(ArrayList<Appetizer> appetizers) {
        ArrayList<Appetizer> decoratedAppetizers = new ArrayList<>();
        for (Appetizer appetizer : appetizers) {
            decoratedAppetizers.add(new SpicyMayo(appetizer));
        }
        return decoratedAppetizers;
    }
    
    private ArrayList<Appetizer> decorateWithBBQ(ArrayList<Appetizer> appetizers) {
        ArrayList<Appetizer> decoratedAppetizers = new ArrayList<>();
        for (Appetizer appetizer : appetizers) {
            decoratedAppetizers.add(new Barbecue(appetizer));
        }
        return decoratedAppetizers;
    }
    private void clearAll(){
        bbqCheckBox.setSelected(false);
        calamariCheckBox.setSelected(false);
        chickenAndPotatoCreamCheckBox.setSelected(false);
        chickenPadThaiCheckBox.setSelected(false);
        chickenSaladCheckBox.setSelected(false);
        coffeeCheckBox.setSelected(false);
        cokeCheckBox.setSelected(false);
        frenchFriesCheckBox.setSelected(false);
        onionRingsCheckBox.setSelected(false);
        spicyMayoCheckBox.setSelected(false);
        todaySaladCheckBox.setSelected(false);
        phoneNumberTextBox.setText("");
        
    }
    private void spicyMayoCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spicyMayoCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spicyMayoCheckBoxActionPerformed

    private void chickenPadThaiCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chickenPadThaiCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chickenPadThaiCheckBoxActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        displayOrdersTextArea.setText("");

    }//GEN-LAST:event_clearButtonActionPerformed

    private void frenchRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frenchRadioButtonActionPerformed
        // TODO add your handling code here:
        bbqCheckBox.setText(bundleFR.getString("BBQCheckBox"));
        calamariCheckBox.setText(bundleFR.getString("CalamariCheckBox"));
        chickenAndPotatoCreamCheckBox.setText(bundleFR.getString("ChickenAndPotatoCream"));
        chickenPadThaiCheckBox.setText(bundleFR.getString("PadThai"));
        chickenSaladCheckBox.setText(bundleFR.getString("ChickenSalad"));
        coffeeCheckBox.setText(bundleFR.getString("CoffeeCheckBox"));
        cokeCheckBox.setText(bundleFR.getString("CokeCheckBox"));
        frenchFriesCheckBox.setText(bundleFR.getString("FrenchFriesCheckBox"));
        onionRingsCheckBox.setText(bundleFR.getString("OnionRingCheckBox"));
        spicyMayoCheckBox.setText(bundleFR.getString("SpicyMayoCheckBox"));
        todaySaladCheckBox.setText(bundleFR.getString("TodaySalad"));
        clearButton.setText(bundleFR.getString("ClearButton"));
        forAppetizerLabel.setText(bundleFR.getString("ForAppetizerLabel"));
        forMainDishesLabel.setText(bundleFR.getString("ForMainDishesLabel"));
        forPhoneNumberLabel.setText(bundleFR.getString("ForPhoneNumberLabel"));
        forSaladLabel.setText(bundleFR.getString("ForSaladLabel"));
        forTotalLabel.setText(bundleFR.getString("ForTotalLabel"));
        orderButton.setText(bundleFR.getString("orderButton"));
        restaurantNameLabel.setText(bundleFR.getString("RestaurantNameLabel"));
        statusLabel.setText(bundleFR.getString("StatusLabel"));
        englishRadioButton.setSelected(false);
        frenchRadioButton.setSelected(true);
    }//GEN-LAST:event_frenchRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox bbqCheckBox;
    private javax.swing.JCheckBox calamariCheckBox;
    private javax.swing.JCheckBox chickenAndPotatoCreamCheckBox;
    private javax.swing.JCheckBox chickenPadThaiCheckBox;
    private javax.swing.JCheckBox chickenSaladCheckBox;
    private javax.swing.JButton clearButton;
    private javax.swing.JCheckBox coffeeCheckBox;
    private javax.swing.JCheckBox cokeCheckBox;
    private javax.swing.JTextArea displayOrdersTextArea;
    private javax.swing.JRadioButton englishRadioButton;
    private javax.swing.JLabel forAppetizerLabel;
    private javax.swing.JLabel forMainDishesLabel;
    private javax.swing.JLabel forPhoneNumberLabel;
    private javax.swing.JLabel forSaladLabel;
    private javax.swing.JLabel forTotalLabel;
    private javax.swing.JCheckBox frenchFriesCheckBox;
    private javax.swing.JRadioButton frenchRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JCheckBox onionRingsCheckBox;
    private javax.swing.JButton orderButton;
    private javax.swing.JTextField phoneNumberTextBox;
    private javax.swing.JLabel restaurantNameLabel;
    private javax.swing.JCheckBox spicyMayoCheckBox;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JCheckBox todaySaladCheckBox;
    private javax.swing.JLabel totalLabel;
    // End of variables declaration//GEN-END:variables
}
